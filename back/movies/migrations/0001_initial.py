# Generated by Django 4.2.16 on 2024-11-25 23:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('profile_path', models.CharField(max_length=255, null=True)),
                ('birth_date', models.DateField(null=True)),
                ('birthplace', models.CharField(max_length=100, null=True)),
                ('biography', models.TextField(null=True)),
                ('gender', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('profile_path', models.CharField(max_length=255, null=True)),
                ('birth_date', models.DateField(null=True)),
                ('birthplace', models.CharField(max_length=100, null=True)),
                ('biography', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_id', models.IntegerField()),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('original_title', models.CharField(max_length=255, null=True)),
                ('overview', models.TextField(null=True)),
                ('poster_path', models.CharField(max_length=255, null=True)),
                ('release_date', models.DateField(null=True)),
                ('runtime', models.IntegerField(null=True)),
                ('original_language', models.CharField(max_length=10, null=True)),
                ('vote_average', models.FloatField()),
                ('popularity', models.FloatField()),
                ('video_path', models.CharField(max_length=255, null=True)),
                ('wishlist_users', models.ManyToManyField(related_name='wishlist_movies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MovieOtt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Ott',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_id', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('logo_path', models.CharField(max_length=200, null=True)),
                ('movies', models.ManyToManyField(through='movies.MovieOtt', to='movies.movie')),
            ],
        ),
        migrations.AddField(
            model_name='movieott',
            name='ott',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.ott'),
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.genre')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieDirector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.director')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieActor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_name', models.CharField(max_length=100, null=True)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.actor')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
        ),
        migrations.AddField(
            model_name='genre',
            name='movies',
            field=models.ManyToManyField(through='movies.MovieGenre', to='movies.movie'),
        ),
        migrations.AddField(
            model_name='director',
            name='movies',
            field=models.ManyToManyField(through='movies.MovieDirector', to='movies.movie'),
        ),
        migrations.AddField(
            model_name='director',
            name='wishlist_users',
            field=models.ManyToManyField(related_name='wishlist_directors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='actor',
            name='movies',
            field=models.ManyToManyField(through='movies.MovieActor', to='movies.movie'),
        ),
        migrations.AddField(
            model_name='actor',
            name='wishlist_users',
            field=models.ManyToManyField(related_name='wishlist_actors', to=settings.AUTH_USER_MODEL),
        ),
    ]
